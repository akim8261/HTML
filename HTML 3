import React, { useState, useEffect, useMemo } from "react";

const PAGE_SIZE = 50; // Количество товаров на странице

const ProductsTable = () => {
  const [products, setProducts] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        const response = await fetch("https://dummyjson.com/products?limit=10000");
        const data = await response.json();
        setProducts(data.products);
      } catch (error) {
        console.error("Ошибка загрузки данных:", error);
      } finally {
        setLoading(false);
      }
    };
    fetchProducts();
  }, []);

  const paginatedProducts = useMemo(() => {
    const start = (currentPage - 1) * PAGE_SIZE;
    return products.slice(start, start + PAGE_SIZE);
  }, [products, currentPage]);

  const totalPages = useMemo(() => Math.ceil(products.length / PAGE_SIZE), [products]);

  return (
    <div style={styles.container}>
      <h1>Таблица товаров</h1>

      {loading ? (
        <p>Загрузка...</p>
      ) : (
        <>
          <table style={styles.table}>
            <thead>
              <tr>
                <th>ID</th>
                <th>Название</th>
                <th>Цена</th>
                <th>Категория</th>
              </tr>
            </thead>
            <tbody>
              {paginatedProducts.map((product) => (
                <tr key={product.id}>
                  <td>{product.id}</td>
                  <td>{product.title}</td>
                  <td>${product.price}</td>
                  <td>{product.category}</td>
                </tr>
              ))}
            </tbody>
          </table>

          <div style={styles.pagination}>
            <button
              style={styles.button}
              onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}
              disabled={currentPage === 1}
            >
              Назад
            </button>
            <span>Страница {currentPage} из {totalPages}</span>
            <button
              style={styles.button}
              onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}
              disabled={currentPage === totalPages}
            >
              Вперед
            </button>
          </div>
        </>
      )}
    </div>
  );
};

const styles = {
  container: {
    textAlign: "center",
    padding: "20px",
  },
  table: {
    width: "80%",
    margin: "20px auto",
    borderCollapse: "collapse",
  },
  pagination: {
    marginTop: "20px",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    gap: "10px",
  },
  button: {
    padding: "10px 20px",
    cursor: "pointer",
    fontSize: "16px",
    border: "1px solid #ccc",
    backgroundColor: "#61dafb",
  },
};

export default ProductsTable;
